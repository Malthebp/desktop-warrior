@using DesktopWarrior.Models
@using DesktopWarrior.Models.ViewModels
@model UpdateProductViewModel

@{
    ViewBag.Title = "CreateForm";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}


<a class="col-md-4" href="@Url.Action("AuthProductIndex", "Product", new { productType = Model.Category.UrlFriendlyTitle, categoryId = Model.Product.CategoryId })">
    <h3>GO BACK</h3>
</a>
<h2>Update the current product</h2>
@using (Html.BeginForm("Update", "Product", FormMethod.Post, new { @class = "form-product__update", }))
{

    @Html.EditorFor(x => x.Product)

    <button type="submit">Update product</button>
}
<div class="product-update">
    <div class="types">
        <div class="col-md-5">
            <h3>All types</h3>
                @foreach (var parent in Model.Product.Types)
                {
                    using (Html.BeginForm("RemoveType", "Product", FormMethod.Post, new { @class = "remove-type" }))
                    {
                        @Html.Hidden("productId", Model.Product.ProductId)
                        @Html.Hidden("categoryId", Model.Category.CategoryId)
                        @Html.Hidden("typeId", parent.TypeId)
                        <button type="submit">-</button>
                        <p>@parent.Title</p>
                    }
                }
            </ul>

        </div>
        <div class="col-md-12 add-type">
            <h3>Add Type</h3>
            @foreach (var parent in Model.Types)
            {
                using (Html.BeginForm("SelectType", "Product", FormMethod.Post))
                {
                    @Html.Hidden("productId", Model.Product.ProductId)
                    @Html.Hidden("categoryId", Model.Category.CategoryId)
                    <br />
                    <p>@parent.Title</p>
                    @Html.DropDownList("typeId", new MultiSelectList(parent.Types1, "TypeId", "Title"))
                    <button type="submit">Update @parent.Title</button>
                }
            }
        </div>
    </div>
    <div class="specs">
        <div>
            <h3>All specifictions</h3>
            <table>
                <thead>
                    <tr>
                        <th>Remove</th>
                        <th>Spec name</th>
                        <th>Spec value</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var spec in Model.Specifications)
            {
                        <tr class="specs-each">
                            <td>
                                <a href="@Url.Action("RemoveSpec", "Product", new { specificationId = spec.SpecificationId, productId = spec.ProductId})">
                                    <p>remove</p>
                                </a>
                            </td>
                            <td><p><strong>@spec.Title</strong></p></td>
                            <td><p>@spec.Description</p></td>
                        </tr>
                    }
                </tbody>
            </table>
</div>
        <div class="add-spec">
            <h3>Add specifiction</h3>
                @using (Html.BeginForm("AddSpec", "Product", FormMethod.Post))
            {
                    @*@Html.Hidden("productId", Model.Product.ProductId)*@
                    @Html.LabelFor(x => x.Specification.ProductId)
                    @Html.EditorFor(x => x.Specification.ProductId)

                    @Html.LabelFor(x => x.Specification.Title)
                    @Html.EditorFor(x => x.Specification.Title)

                    @Html.LabelFor(x => x.Specification.Description)
                    @Html.EditorFor(x => x.Specification.Description)
                    <button type="submit">Add Specification</button>
                }
        </div>
    </div>
</div>